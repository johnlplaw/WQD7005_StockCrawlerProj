*------------------------------------------------------------*
User:                QR
Date:                May 11, 2019
Time:                22:54:51
Site:                12601940
Platform:            W32_7PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                May 11, 2019
Time:                22:54:45
*------------------------------------------------------------*
14715  proc freq data=EMWS3.FIMPORT_VariableSet noprint;
14716  table ROLE*LEVEL/out=WORK.FIMPORTMETA;
14717  run;
 
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: The data set WORK.FIMPORTMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
14718  proc print data=WORK.FIMPORTMETA label noobs;
14719  var ROLE LEVEL COUNT;
14720  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14721  title9 ' ';
14722  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14723  run;
 
NOTE: There were 3 observations read from the data set WORK.FIMPORTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
14724  title10;
 
14725  %let EMEXCEPTIONSTRING=;
15056  *------------------------------------------------------------*;
15057  * FIMPORT: Generation of macros and macro variables;
15058  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15059  *------------------------------------------------------------*;
 
15060  %let EMEXCEPTIONSTRING=;
15061  *------------------------------------------------------------*;
15062  * TRAIN: FIMPORT;
15063  *------------------------------------------------------------*;
15064  %let EM_ACTION = TRAIN;
15065  %let syscc = 0;
15066  /* Fimport.source */
15067  %macro main;
15068        %if %upcase(&EM_ACTION) = CREATE %then %do;
15069           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15070           %include temp;
15071           filename temp;
15072           %create;
15073        %end;
15074        %else
15075        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15076           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15077           %include temp;
15078           filename temp;
15079           %train;
15080        %end;
15081        %else
15082        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15083           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15084           %include temp;
15085           filename temp;
15086           %update;
15087        %end;
15088        %else
15089        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15090           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15091           %include temp;
15092           filename temp;
15093           %property;
15094        %end;
15095         %else
15096        %if %upcase(&EM_ACTION) = SCORE %then %do;
15097           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15098           %include temp;
15099           filename temp;
15100           %score;
15101        %end;
15102        %else
15103        %if %upcase(&EM_ACTION) = REPORT %then %do;
15104           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15105           %include temp;
15106           filename temp;
15107           %report;
15108        %end;
15109        %else
15110        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15111           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15112           %include temp;
15113           filename temp;
15114           %openvariableset;
15115        %end;
15116        %else
15117        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15118           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15119           %include temp;
15120           filename temp;
15121           %closevariableset;
15122        %end;
15123  %mend main;
15124  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15125 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15126 +%macro appendExt;
15127 +   data _null_;
15128 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15129 +      rfile = reverse(tempuif);
15130 +      period = indexc(rfile,".");
15131 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15132 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15133 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15134 +   run;
15135 +%mend appendExt;
15137 +%macro getNobs(ds);
15138 + %global dset nobs;
15139 + %let dset=&ds;
15140 + %let dsid = %sysfunc(open(&dset));
15141 + %if &dsid %then %do;
15142 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15143 +      %let rc = %sysfunc(close(&dsid));
15144 +   %end;
15145 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15146 +%mend getNobs;
15147 +%macro keepordrop;
15148 +  proc contents data=work.importfile noprint
15149 +  out=work.importattrs;
15150 +  run;
15151 +  %getNobs(work.importattrs);
15152 +  data _null_;
15153 +    set  work.importattrs;
15154 +    call symput("varname"||left(_n_),name);
15155 +  run;
15157 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15158 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15159 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15160 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15161 +     %put diff=&diff;
15162 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15163 +         %let kORd = keep;
15164 +             %let start=1;
15165 +             %let end = &EM_PROPERTY_MAXCOLS;
15166 +       %end;
15167 +     %else %do;
15168 +         %let kORd = drop;
15169 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15170 +             %let end = &nobs;
15171 +       %end;
15172 +     data &em_user_data;
15173 +        set &em_user_data;
15174 +        &kORd
15175 +        %do i = &start %to &end;
15176 +            &&varname&i
15177 +         %end;
15178 +        ;
15179 +     run;
15180 +%end;
15181 +%mend keepordrop;
15182 +%macro dropformatvars;
15183 +   %put fmtcnt=&fmtcnt;
15184 +   data new;
15185 +     set work.importfile;
15186 +     %do i = 1 %to &fmtcnt;
15187 +       x1zy&i =put(&&varname&i,&&fmt&i);
15188 +     %end;
15189 +   run;
15190 +   data new;
15191 +     set new;
15192 +     drop
15193 +     %do i = 1 %to &fmtcnt;
15194 +     &&varname&i
15195 +     %end;
15196 +     ;
15197 +   run;
15198 +   proc datasets library=work nolist;
15199 +     modify new;
15200 +     %do i = 1 %to &fmtcnt;
15201 +     rename x1zy&i=&&varname&i;
15202 +     %end;
15203 +   run; quit;
15204 +   data work.importfile;
15205 +     set new;
15206 +   run;
15207 +%mend;
15209 +%macro procimport(out=);
15210 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15211 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15212 +         out=&out
15213 +         dbms = ACCESS
15214 +         replace;
15215 +         database="%trim(&_IFILENAME)"
15216 +   %end;
15217 +   %else %do;
15218 +       proc import datafile="%trim(&_IFILENAME)"
15219 +          out=&out
15221 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15222 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15223 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15224 +         dbms=&EM_PROPERTY_FILETYPE
15225 +      %end;
15226 +      %else %do;
15227 +         dbms=TAB
15228 +      %end;
15229 +      /* Work around for the following defects:S0560899 and S0560009.   */
15230 +      %let sasEnv=%sysfunc(getlocenv());
15231 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15232 +         dbms=EXCEL
15233 +      %end;
15235 +      replace;
15236 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15237 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15238 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15239 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15240 +            getnames=&EM_PROPERTY_NAMEROW;
15241 +        %end;
15242 +      %end;
15243 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15244 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15245 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15246 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15247 +               delimiter=" ";
15248 +            %end;
15249 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15250 +               /* Do not specifiy a delimiter */
15251 +            %end;
15252 +            %else %do;
15253 +               delimiter="&EM_PROPERTY_DELIMITER";
15254 +            %end;
15255 +         %end;
15256 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15257 +            datarow=&EM_PROPERTY_SKIPROWS;
15258 +            /* Guessingrows must be >= skiprows */
15259 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15260 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15261 +            %end;
15262 +         %end;
15263 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15264 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15265 +         %end;
15266 +       %end;
15267 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15268 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15269 +            FMTLIB = work.formats;
15270 +      %end;
15271 +   %end;
15272 +   run;
15273 +%mend procimport;
15275 +%macro train;
15277 +   %let vvnString = %sysfunc(getoption(validvarname));
15279 +   %em_getname(key=DATA,           type=DATA);
15280 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15281 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15282 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15284 +   %appendExt;
15286 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15287 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15288 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15289 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15290 +   %end;
15292 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15293 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15294 +       %goto endtrain;
15295 +   %end;
15297 +   options validvarname=ANY;
15298 +   %procimport(out=work.importfile);
15300 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15301 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15302 +      %global fmtcnt;
15303 +      %let fmtcnt=0;
15304 +      proc contents data=work.importfile out=work.impattrs noprint;
15305 +      run;
15306 +      data _null_;
15307 +        set work.impattrs;
15308 +        if _n_=1 then i=0;
15309 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15310 +           i = i+1;
15311 +           varname = substr(name, 1, length(name));
15312 +           call symput("fmt"||left(i), trim(format)||".");
15313 +           call symput("varname"||left(i), varname);
15314 +           call symput("fmtcnt",left(i));
15315 +      end;
15316 +      retain i;
15317 +     run;
15318 +    %if &fmtcnt > 0 %then %do;
15319 +       %dropformatvars;
15320 +    %end;
15321 +    proc datasets lib=work memtype=data nolist;
15322 +        modify importfile;
15323 +        attrib _all_ format=;
15324 +    run;
15325 +    quit;
15326 +   %end;
15328 +   %let _fimportObs  = 0;
15329 +   %let _fimportVars = 0;
15330 +   %if %sysfunc(exist(work.importFile)) %then %do;
15331 +       %let dsid = %sysfunc(open(work.importFile));
15332 +       %if &dsid %then %do;
15333 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15334 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15335 +       %let dsid = %sysfunc(close(&dsid));
15336 +       %end;
15337 +   %end;
15339 +   %if ^&_fimportObs %then %do;
15340 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15341 +       %goto endtrain;
15342 +   %end;
15343 +   %if ^&_fimportVars %then %do;
15344 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15345 +       %goto endtrain;
15346 +   %end;
15348 +   data &em_user_data;
15349 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15350 +   run;
15351 +   %keepordrop;
15353 +   %em_getname(key=EMSTAT,     type=DATA);
15355 +   proc datasets lib=&em_lib nolist;
15356 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15357 +   run;
15359 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15360 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15361 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15362 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15363 +            maxClassLevels=20, identifyEmptyColumns=Y,
15364 +            outdata=&em_user_EMCMETADEFAULT,
15365 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15367 +        data &em_user_emcmetadefault;
15368 +           set &em_user_emcmetadefault;
15369 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15370 +        run;
15372 +        data &em_data_eminfo;
15373 +           length TARGET KEY $32  DATA $43;
15374 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15375 +        run;
15377 +        %let EM_META_ADVISOR=ADVANCED;
15379 +   %end;
15380 +   %else %do;
15381 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15382 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15383 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15384 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15386 +            %if "&em_property_summarize" eq "Y" %then %do;
15387 +                %em_getname(key=EMSTAT,  type=DATA);
15388 +                data &em_data_eminfo;
15389 +                   length TARGET KEY $32  DATA $43;
15390 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15391 +                run;
15392 +            %end;
15394 +        %let EM_META_ADVISOR=BASIC;
15396 +   %end;
15398 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15399 +   data _null_;
15400 +      fname = '_text';
15401 +      rc=filename(fname, "&em_user_vvnlabel");
15402 +      if ^rc and fexist(fname) then
15403 +         rc=fdelete(fname);
15404 +     rc=filename(fname);
15405 +   run;
15408 +   /* Validvarname Case */
15409 +   %let newNameFlag = 0;
15410 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15411 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15412 +        %if &dsid %then %do;
15413 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15414 +            %let dsid = %sysfunc(close(&dsid));
15415 +       %end;
15416 +   %end;
15418 +   %if %sysevalf(&newNameFlag>0) %then %do;
15419 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15420 +       run;
15421 +       proc sort data=work._any; by VARNUM; run; quit;
15423 +       options validvarname=V7;
15425 +       %procimport(out=work.importfile2);
15427 +       options validvarname=ANY;
15429 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15430 +       run;
15431 +       proc sort data=work._v7; by varnum; run; quit;
15433 +       filename _FI "&em_user_vvnlabel";
15434 +       data work._names;
15435 +          length string $200;
15436 +          merge work._v7 work._any;
15437 +          by VARNUM;
15438 +          file _FI;
15439 +          if V7NAME ne NAME then do;
15440 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15441 +             put string;
15442 +             if LABEL eq '' then do;
15443 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15444 +                put string;
15445 +             end;
15446 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15447 +             put string;
15448 +          end;
15449 +          drop string;
15450 +       run;
15451 +       data &em_user_data;
15452 +          set &em_user_data;
15453 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15454 +              filename _FI "&em_user_vvnlabel";
15455 +              %inc _FI;
15456 +             filename _FI;
15457 +          %end;
15458 +       run;
15460 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15461 +       proc sort data=work._names;             by NAME; run;
15463 +       data &em_user_EMCMETADEFAULT;
15464 +         merge  &em_user_EMCMETADEFAULT _names;
15465 +         by NAME;
15466 +         length DROP $1;
15467 +         DROP='N';
15468 +         if NEWNAME ne NAME then do;
15469 +            if LABEL eq '' then do;
15470 +               LABEL = NAME;
15471 +            end;
15472 +            NAME=V7NAME;
15473 +         end;
15474 +         drop NEWNAME V7NAME VARNUM;
15475 +       run;
15477 +       proc datasets lib=work nolist;
15478 +          delete _any _v7 _names importfile2;
15479 +       run;
15480 +       quit;
15482 +   %end;
15483 +   %else %do;
15484 +       data &em_user_EMCMETADEFAULT;
15485 +          set &em_user_EMCMETADEFAULT;
15486 +          length DROP $1;
15487 +          DROP='N';
15488 +       run;
15489 +   %end;
15491 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15493 +   data _temp;
15494 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15495 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15496 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15497 +      COLUMNMETAMODTIME=MODTIME;
15498 +   run;
15499 +   proc sort data=&em_data_importset;
15500 +      by PORT;
15501 +   run;
15502 +   data &em_data_importset;
15503 +      merge &em_data_importset _temp;
15504 +      by PORT;
15505 +      if PORT='DATA' then ROLE="&em_property_role";
15506 +   run;
15508 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15510 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15511 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15512 +            filename x "&em_user_variablesetdelta";
15513 +            data &em_data_variableset;
15514 +               set &em_user_emcmetadefault;
15515 +               %inc X;
15516 +            run;
15517 +            filename x;
15518 +        %end;
15519 +        %else %do;
15520 +            data &em_data_variableset;
15521 +               set &em_user_emcmetadefault;
15522 +            run;
15523 +        %end;
15524 +    %end;
15526 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15527 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15528 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15529 +         id NAME;
15530 +      run;
15532 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15533 +         data _null_;
15534 +            length string $200;
15535 +            set _DiffMeta end=eof;
15536 +            where _type_='COMPARE';
15537 +            file x1;
15538 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15539 +            put string;
15540 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15541 +            put string;
15542 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15543 +            put string;
15544 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15545 +            put string;
15546 +            put 'end;';
15547 +            if drop='Y' then do;
15548 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15549 +               put string;
15550 +            end;
15551 +            if eof then
15552 +               put 'drop DROP;';
15553 +         run;
15555 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15556 +         filename x2 "&em_user_deltacode";
15557 +         %em_copyfile(infref=x1, outfref=x2);
15558 +         filename x1;
15559 +         filename x2;
15561 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15562 +         filename x "&em_user_variablesetdelta";
15563 +         data _null_;
15564 +            length string $200;
15565 +            set _DiffMeta end=eof;
15566 +            where _type_='COMPARE';
15567 +            file x;
15568 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15569 +            put string;
15570 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15571 +            put string;
15572 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15573 +            put string;
15574 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15575 +            put string;
15576 +            string = '   DROP="'!!strip(DROP)!!'";';
15577 +            put string;
15578 +            put 'end;';
15579 +         run;
15580 +         filename x;
15581 +       proc datasets lib=work nolist;
15582 +          delete _DiffMeta;
15583 +       run;
15585 +       data &em_data_exportset;
15586 +          set &em_data_exportset;
15587 +          if NODEPORT='TRAIN' then do;
15588 +             ROLE="&em_property_role";
15589 +             COLUMNMETAMODTIME=datetime();
15590 +             MODTIME=datetime();
15591 +             DATASET="&em_nodeid._train";
15592 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15593 +             DELTACODE="CDelta_TRAIN";
15594 +             APPLYDELTA='Y';
15595 +             EXPORT='Y';
15596 +             NEEDUPDATE='Y';
15598 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15599 +                EMINFO="&em_data_eminfo";
15600 +                EMINFOMODTIME=datetime();
15601 +            %end;
15602 +            %else %do;
15603 +                EMINFO='';
15604 +                EMINFOMODTIME=.;
15605 +            %end;
15606 +          end;
15607 +       run;
15608 +   %end;
15610 +  proc contents data=&em_user_data;
15611 +  run;
15612 +  proc datasets library=work nolist;
15613 +   delete importfile importattrs new;
15614 +   quit;
15615 +  run;
15617 +  /* Reset VALIDVARNAME to original settings */
15618 +  options validvarname=&vvnString;
15620 +  %endtrain:
15621 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
filetype=*csv*
delimiter=*,*
 
15622   /**********************************************************************
15623   *   PRODUCT:   SAS
15624   *   VERSION:   9.4
15625   *   CREATOR:   External File Interface
15626   *   DATE:      11MAY19
15627   *   DESC:      Generated SAS Datastep Code
15628   *   TEMPLATE SOURCE:  (None Specified.)
15629   ***********************************************************************/
15630      data WORK.IMPORTFILE    ;
15631      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15632      infile 'C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\USERIMPORTFILE.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
15633         informat thedate anydtdtm40. ;
15634         informat thetime time20.3 ;
15635         informat comp_name $84. ;
15636         informat comp_code $10. ;
15637         informat stock_code $6. ;
15638         informat Category $4. ;
15639         informat Sub_category $6. ;
15640         informat open best32. ;
15641         informat low best32. ;
15642         informat high best32. ;
15643         informat lastDone best32. ;
15644         informat chg best32. ;
15645         informat chgPercent best32. ;
15646         informat vol best32. ;
15647         informat buy best32. ;
15648         informat buyval best32. ;
15649         informat sell best32. ;
15650         informat sellval best32. ;
15651         informat crawl_Timestamp anydtdtm40. ;
15652         informat v_updownpercent best32. ;
15653         informat updownInd $8. ;
15654         format thedate datetime. ;
15655         format thetime time20.3 ;
15656         format comp_name $84. ;
15657         format comp_code $10. ;
15658         format stock_code $6. ;
15659         format Category $4. ;
15660         format Sub_category $6. ;
15661         format open best12. ;
15662         format low best12. ;
15663         format high best12. ;
15664         format lastDone best12. ;
15665         format chg best12. ;
15666         format chgPercent best12. ;
15667         format vol best12. ;
15668         format buy best12. ;
15669         format buyval best12. ;
15670         format sell best12. ;
15671         format sellval best12. ;
15672         format crawl_Timestamp datetime. ;
15673         format v_updownpercent best12. ;
15674         format updownInd $8. ;
15675      input
15676                  thedate
15677                  thetime
15678                  comp_name $
15679                  comp_code $
15680                  stock_code $
15681                  Category $
15682                  Sub_category $
15683                  open
15684                  low
15685                  high
15686                  lastDone
15687                  chg
15688                  chgPercent
15689                  vol
15690                  buy
15691                  buyval
15692                  sell
15693                  sellval
15694                  crawl_Timestamp
15695                  v_updownpercent
15696                  updownInd $
15697      ;
15698      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
15699      run;
 
NOTE: The infile 'C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\USERIMPORTFILE.csv' is:
      Filename=C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=427535,
      Last Modified=11May2019:22:48:15,
      Create Time=11May2019:22:48:08
 
NOTE: 2501 records were read from the infile 'C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\USERIMPORTFILE.csv'.
      The minimum record length was 129.
      The maximum record length was 229.
NOTE: The data set WORK.IMPORTFILE has 2501 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2501 rows created in WORK.IMPORTFILE from C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\USERIMPORTFILE.csv.
 
 
 
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: The data set WORK.IMPORTFILE has 2501 observations and 21 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.52 seconds
      cpu time            0.48 seconds
 
 
 
NOTE: There were 2501 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS3.FIMPORT_DATA has 2501 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 21 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 21 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
nobs=21  maxcols=10000
 
NOTE: The file EMWS3.FIMPORT_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS3.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
15700  %let SYSCC = 0;
15701  %let _dsidTable = 0;
15702  %let _engineTable =;
15703  data _null_;
15704  dsid = open('EMWS3.FIMPORT_DATA');
15705  call symput('_dsidTable', strip(put(dsid, best.)));
15706  if dsid then do;
15707  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15708  dsid = close(dsid);
15709  end;
15710  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15711  options fmterr;
15712  data _metaTestView;
15713  set EMWS3.FIMPORT_DATA;
15714  if _N_=1 then do;
15715  output;
15716  stop;
15717  end;
15718  run;
 
NOTE: There were 1 observations read from the data set EMWS3.FIMPORT_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15719  proc contents data=EMWS3.FIMPORT_DATA
15720  out=WORK.M1JG2E3T noprint;
15721  run;
 
NOTE: The data set WORK.M1JG2E3T has 21 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15722  data WORK.M1JG2E3T;
15723  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15724  label NAME =;
15725  set WORK.M1JG2E3T(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15726  if itype = 1 then type = 'N';
15727  else type = 'C';
15728  if formatl > 0 then do;
15729  if format ne '' then do;
15730  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15731  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15732  end;
15733  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15734  end;
15735  else if format ne '' then format = strip(format)!!'.';
15736  if informl > 0 then do;
15737  if informat ne ' ' then do;
15738  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15739  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15740  end;
15741  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15742  end;
15743  else if informat ne '' then informat = strip(informat)!!'.';
15744  if idxusage = 'NONE' then index ="N";
15745  else index = "Y";
15746  indextype = idxusage;
15747  drop idxusage itype formatl formatd informl informd;
15748  run;
 
NOTE: There were 21 observations read from the data set WORK.M1JG2E3T.
NOTE: The data set WORK.M1JG2E3T has 21 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
15749  data WORK.M1JG2E3T;
15750  length UNAME $64;
15751  set WORK.M1JG2E3T;
15752  UNAME = upcase(NAME);
15753  run;
 
NOTE: There were 21 observations read from the data set WORK.M1JG2E3T.
NOTE: The data set WORK.M1JG2E3T has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15757  data WORK.M3MXUZ17;
15758  drop UNAME;
15759  set WORK.M3MXUZ17;
15760  run;
 
NOTE: There were 21 observations read from the data set WORK.M3MXUZ17.
NOTE: The data set WORK.M3MXUZ17 has 21 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.59 seconds
      cpu time            0.31 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS3.FIMPORT_EMCMETADEFAULT has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
16011  %let SYSCC = 0;
16012  data EMWS3.FIMPORT_EMTMETADEFAULT;
16013  length LIBNAME $8;
16014  LIBNAME = "EMWS3";
16015  run;
 
NOTE: The data set EMWS3.FIMPORT_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.21 seconds
      cpu time            0.14 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS3.FIMPORT_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.FIMPORT_IMPORTSET.
NOTE: The data set EMWS3.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS3.FIMPORT_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS3.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\VARIABLESETDELTA.txt.
16044 +if NAME="crawl_Timestamp" then do;
16045 +ROLE="INPUT";
16046 +LEVEL="INTERVAL";
16047 +ORDER="";
16048 +DROP="N";
16049 +end;
16050 +if NAME="thedate" then do;
16051 +ROLE="INPUT";
16052 +LEVEL="INTERVAL";
16053 +ORDER="";
16054 +DROP="N";
16055 +end;
16056 +if NAME="thetime" then do;
16057 +ROLE="INPUT";
16058 +LEVEL="INTERVAL";
16059 +ORDER="";
16060 +DROP="N";
16061 +end;
16062 +if NAME="v_updownpercent" then do;
16063 +ROLE="INPUT";
16064 +LEVEL="INTERVAL";
16065 +ORDER="";
16066 +DROP="N";
16067 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS3.FIMPORT_VARIABLESET has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
WARNING: The data set EMWS3.FIMPORT_EMCMETADEFAULT is not sorted by the ID variables. Observations will be matched using NOTSORTED logic with the assumption that the observations correspond one-to-one.
NOTE: At observation 3 the current and previous ID values are:
WARNING: The data set EMWS3.FIMPORT_VARIABLESET is not sorted by the ID variables. Observations will be matched using NOTSORTED logic with the assumption that the observations correspond one-to-one.
NOTE: At observation 3 the current and previous ID values are:
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 8 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X1 is:
      Filename=C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11May2019:22:54:48,
      Create Time=11May2019:22:47:49
 
NOTE: 21 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 34.
NOTE: There were 4 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X2 is:
      Filename=C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=11May2019:22:54:48,
      Create Time=11May2019:22:48:17
 
NOTE: 21 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 34.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11May2019:22:54:48,
      Create Time=11May2019:22:48:17
 
NOTE: 24 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 34.
NOTE: There were 4 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
16068  *------------------------------------------------------------*;
16069  * End TRAIN: FIMPORT;
16070  *------------------------------------------------------------*;
 
16071  *------------------------------------------------------------*;
16072  * Close any missing semi colons;
16073  *------------------------------------------------------------*;
16074  ;
16075  ;
16076  ;
16077  ;
16078  quit;
16079  *------------------------------------------------------------*;
16080  * Close any unbalanced quotes;
16081  *------------------------------------------------------------*;
16082  /*; *"; *'; */
16083  ;
16084  run;
16085  quit;
16086  /* Reset EM Options */
16087  options formchar="|----|+|---+=|-/\<>*";
16088  options nocenter ls=256 ps=10000;
16089  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                May 11, 2019
Time:                22:54:49
*------------------------------------------------------------*
16191  %let EMEXCEPTIONSTRING=;
16192  *------------------------------------------------------------*;
16193  * SCORE: FIMPORT;
16194  *------------------------------------------------------------*;
16195  %let EM_ACTION = SCORE;
16196  %let syscc = 0;
16197  /* Fimport.source */
16198  %macro main;
16199        %if %upcase(&EM_ACTION) = CREATE %then %do;
16200           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16201           %include temp;
16202           filename temp;
16203           %create;
16204        %end;
16205        %else
16206        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16207           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16208           %include temp;
16209           filename temp;
16210           %train;
16211        %end;
16212        %else
16213        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16214           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16215           %include temp;
16216           filename temp;
16217           %update;
16218        %end;
16219        %else
16220        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16221           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16222           %include temp;
16223           filename temp;
16224           %property;
16225        %end;
16226         %else
16227        %if %upcase(&EM_ACTION) = SCORE %then %do;
16228           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16229           %include temp;
16230           filename temp;
16231           %score;
16232        %end;
16233        %else
16234        %if %upcase(&EM_ACTION) = REPORT %then %do;
16235           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16236           %include temp;
16237           filename temp;
16238           %report;
16239        %end;
16240        %else
16241        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16242           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16243           %include temp;
16244           filename temp;
16245           %openvariableset;
16246        %end;
16247        %else
16248        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16249           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16250           %include temp;
16251           filename temp;
16252           %closevariableset;
16253        %end;
16254  %mend main;
16255  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16256 +%macro score;
16257 +
16258 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16259 +   data _null_;
16260 +      file x;
16261 +      put ' ';
16262 +   run;
16263 +   filename x;
16264 +
16265 +   %em_getname(key=DATA, type=DATA);
16266 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16267 +       data &em_export_train / view=&em_export_train;
16268 +          set &em_user_data;
16269 +       run;
16270 +   %end;
16271 +
16272 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=C:\JohnLaw\OneDrive\WQD Data Science\WQD7005\SASProject\projects\DataMining\Workspaces\EMWS3\FIMPORT\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=11May2019:22:54:49,
      Create Time=11May2019:22:54:34
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS3.FIMPORT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
16273  *------------------------------------------------------------*;
16274  * End SCORE: FIMPORT;
16275  *------------------------------------------------------------*;
 
16277  *------------------------------------------------------------*;
16278  * FIMPORT: Computing metadata for TRAIN data;
16279  *------------------------------------------------------------*;
 
NOTE: View EMWS3.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS3.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                May 11, 2019
Time:                22:54:51
*------------------------------------------------------------*
16661  %let EMEXCEPTIONSTRING=;
16662  *------------------------------------------------------------*;
16663  * REPORT: FIMPORT;
16664  *------------------------------------------------------------*;
16665  %let EM_ACTION = REPORT;
16666  %let syscc = 0;
16667  /* Fimport.source */
16668  %macro main;
16669        %if %upcase(&EM_ACTION) = CREATE %then %do;
16670           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16671           %include temp;
16672           filename temp;
16673           %create;
16674        %end;
16675        %else
16676        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16677           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16678           %include temp;
16679           filename temp;
16680           %train;
16681        %end;
16682        %else
16683        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16684           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16685           %include temp;
16686           filename temp;
16687           %update;
16688        %end;
16689        %else
16690        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16691           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16692           %include temp;
16693           filename temp;
16694           %property;
16695        %end;
16696         %else
16697        %if %upcase(&EM_ACTION) = SCORE %then %do;
16698           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16699           %include temp;
16700           filename temp;
16701           %score;
16702        %end;
16703        %else
16704        %if %upcase(&EM_ACTION) = REPORT %then %do;
16705           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16706           %include temp;
16707           filename temp;
16708           %report;
16709        %end;
16710        %else
16711        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16712           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16713           %include temp;
16714           filename temp;
16715           %openvariableset;
16716        %end;
16717        %else
16718        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16719           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16720           %include temp;
16721           filename temp;
16722           %closevariableset;
16723        %end;
16724  %mend main;
16725  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
16726 +%macro report;
16727 +    %em_getname(key=EMSTAT,     type=DATA);
16728 +    %em_getname(key=EMINFO,     type=DATA);
16729 +    %em_getname(key=CLASS,      type=DATA);
16730 +    %em_getname(key=INTERVAL,   type=DATA);
16731 +
16732 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
16733 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
16734 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
16735 +
16736 +    %if &em_property_summarize eq Y %then %do;
16737 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
16738 +        %include temp;
16739 +        filename temp;
16740 +
16741 +        data work.tempmeta;
16742 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16743 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
16744 +         run;
16745 +
16746 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
16747 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
16748 +
16749 +         data work.tempmeta;
16750 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16751 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
16752 +         run;
16753 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
16754 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
16755 +
16756 +        data work.tempmeta;
16757 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16758 +        run;
16759 +
16760 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16761 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
16762 +
16763 +            data &em_data_exportset;
16764 +                 set &em_data_exportset;
16765 +                 if NODEPORT='TRAIN' then do;
16766 +                    EMINFO="&em_data_eminfo";
16767 +                    EMINFOMODTIME=datetime();
16768 +                 end;
16769 +            run;
16770 +        %end;
16771 +        %else %do;
16772 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
16773 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
16774 +                data &em_user_emstat /  view=&em_user_emstat;
16775 +                   set &em_user_emstatdefault;
16776 +                run;
16777 +            %end;
16778 +        %end;
16779 +    %end;
16780 +    %else %do;
16781 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16782 +            proc datasets lib=&em_lib nolist;
16783 +               delete &em_nodeid._EMINFO;
16784 +            run;
16785 +            quit;
16786 +            data &em_data_exportset;
16787 +                 set &em_data_exportset;
16788 +                 if NODEPORT='TRAIN' then do;
16789 +                    EMINFO="";
16790 +                    EMINFOMODTIME=.;
16791 +                 end;
16792 +            run;
16793 +        %end;
16794 +    %end;
16795 +
16796 +    data &em_data_exportset;
16797 +       set &em_data_exportset;
16798 +       if NODEPORT='TRAIN' then do;
16799 +          ROLE="&em_property_role";
16800 +       end;
16801 +    run;
16802 +
16803 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
16804 +        proc freq data=&em_data_variableset noprint;
16805 +             table ROLE*LEVEL/out=work.tempMeta;
16806 +        run;
16807 +        proc print data=work.tempmeta label noobs;
16808 +           var ROLE LEVEL COUNT;
16809 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
16810 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
16811 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
16812 +        title9  ' ';
16813 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
16814 +        run;
16815 +        title10;
16816 +    %end;
16817 +
16818 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
16819 +        proc datasets lib=work nolist;
16820 +           delete tempmeta;
16821 +        run;
16822 +        quit;
16823 +    %end;
16824 +
16825 +%mend report;
16826 +
16827 +
16828 +
16829 +
16830 +
16831 +
16832 +
16833 +
16834 +
16835 +
16836 +
16837 +
16838 +
16839 +
16840 +
16841 +
16842 +
16843 +
16844 +
16845 +
16846 +
16847 +
16848 +
16849 +
16850 +
16851 +
16852 +
16853 +
16854 +
16855 +
16856 +
16857 +
16858 +
16859 +
16860 +
16861 +
16862 +
16863 +
16864 +
16865 +
16866 +
16867 +
16868 +
16869 +
16870 +
16871 +
16872 +
16873 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: The file EMWS3.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS3.FIMPORT_EXPORTSET.
NOTE: The data set EMWS3.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 21 observations read from the data set EMWS3.FIMPORT_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16874  *------------------------------------------------------------*;
16875  * End REPORT: FIMPORT;
16876  *------------------------------------------------------------*;
 
16877  /* Reset EM Options */
16878  options formchar="|----|+|---+=|-/\<>*";
16879  options nocenter ls=256 ps=10000;
16880  goptions reset=all device=GIF NODISPLAY;
 
16881  proc sort data=WORK.EM_USER_REPORT;
16882  by ID VIEW;
16883  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
